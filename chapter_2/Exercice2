{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP0FAxemmF+mMGR/c0NZyS3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Downloading the data\n"],"metadata":{"id":"MW42L1y3DUd2"}},{"cell_type":"code","execution_count":70,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t1Br1-wbDH8r","executionInfo":{"status":"ok","timestamp":1753580127291,"user_tz":-60,"elapsed":345,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"a846724b-4598-42bc-a0e4-d62c8032ddd0"},"outputs":[{"output_type":"stream","name":"stdout","text":["    age  sex   cp  trestbps   chol  fbs  restecg  thalach  exang  oldpeak  \\\n","0  63.0  1.0  1.0     145.0  233.0  1.0      2.0    150.0    0.0      2.3   \n","1  67.0  1.0  4.0     160.0  286.0  0.0      2.0    108.0    1.0      1.5   \n","2  67.0  1.0  4.0     120.0  229.0  0.0      2.0    129.0    1.0      2.6   \n","3  37.0  1.0  3.0     130.0  250.0  0.0      0.0    187.0    0.0      3.5   \n","4  41.0  0.0  2.0     130.0  204.0  0.0      2.0    172.0    0.0      1.4   \n","\n","   slope   ca  thal  num  \n","0    3.0  0.0   6.0    0  \n","1    2.0  3.0   3.0    2  \n","2    2.0  2.0   7.0    1  \n","3    3.0  0.0   3.0    0  \n","4    1.0  0.0   3.0    0  \n"]}],"source":["import pandas as pd\n","import requests\n","from io import StringIO\n","\n","# Download the processed Cleveland data directly\n","url = \"https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data\"\n","response = requests.get(url)\n","\n","# Read the data into a DataFrame\n","column_names = [\n","    'age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg',\n","    'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal', 'num'\n","]\n","df = pd.read_csv(StringIO(response.text), names=column_names, na_values='?')\n","\n","print(df.head())"]},{"cell_type":"markdown","source":["# Data Cleaning and feature engineering"],"metadata":{"id":"KLNTkfXcELDw"}},{"cell_type":"code","source":["# Handle missing values\n","print(\"Missing values before cleaning:\")\n","print(df.isnull().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bJlrrhaNELox","executionInfo":{"status":"ok","timestamp":1753580127291,"user_tz":-60,"elapsed":17,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"e54306a2-5d1e-4709-cbe5-152ebb4c6174"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing values before cleaning:\n","age         0\n","sex         0\n","cp          0\n","trestbps    0\n","chol        0\n","fbs         0\n","restecg     0\n","thalach     0\n","exang       0\n","oldpeak     0\n","slope       0\n","ca          4\n","thal        2\n","num         0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# For 'ca' (number of major vessels), which has 4 missing values\n","df['ca'].fillna(df['ca'].mode()[0], inplace=True)\n","# For 'thal' (thalassemia), which has 2 missing values\n","df['thal'].fillna(df['thal'].mode()[0], inplace=True)\n","# Convert target to binary (0 = no disease, 1-4 = disease)\n","df['target'] = df['num'].apply(lambda x: 0 if x == 0 else 1)\n","df.drop('num', axis=1, inplace=True)\n","\n","# Convert categorical variables to proper types\n","categorical_cols = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'thal']\n","df[categorical_cols] = df[categorical_cols].astype('category')\n","\n","print(\"\\nMissing values after cleaning:\")\n","print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tUGcmJBiLIhZ","executionInfo":{"status":"ok","timestamp":1753580127320,"user_tz":-60,"elapsed":39,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"d1551845-f910-4b28-edb1-1aaea915ac23"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Missing values after cleaning:\n","age         0\n","sex         0\n","cp          0\n","trestbps    0\n","chol        0\n","fbs         0\n","restecg     0\n","thalach     0\n","exang       0\n","oldpeak     0\n","slope       0\n","ca          0\n","thal        0\n","target      0\n","dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-72-1849286396.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df['ca'].fillna(df['ca'].mode()[0], inplace=True)\n","/tmp/ipython-input-72-1849286396.py:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df['thal'].fillna(df['thal'].mode()[0], inplace=True)\n"]}]},{"cell_type":"code","source":["# One-hot encode 'cp' and 'thal'\n","df = pd.get_dummies(df, columns=['cp', 'thal'], prefix=['cp', 'thal'])\n","print(df.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gh0o-bI0WoNC","executionInfo":{"status":"ok","timestamp":1753580127331,"user_tz":-60,"elapsed":11,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"10f87fea-ad18-4d1b-9d25-047572deed18"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["    age  sex  trestbps   chol  fbs restecg  thalach exang  oldpeak slope   ca  \\\n","0  63.0  1.0     145.0  233.0  1.0     2.0    150.0   0.0      2.3   3.0  0.0   \n","1  67.0  1.0     160.0  286.0  0.0     2.0    108.0   1.0      1.5   2.0  3.0   \n","2  67.0  1.0     120.0  229.0  0.0     2.0    129.0   1.0      2.6   2.0  2.0   \n","3  37.0  1.0     130.0  250.0  0.0     0.0    187.0   0.0      3.5   3.0  0.0   \n","4  41.0  0.0     130.0  204.0  0.0     2.0    172.0   0.0      1.4   1.0  0.0   \n","\n","   target  cp_1.0  cp_2.0  cp_3.0  cp_4.0  thal_3.0  thal_6.0  thal_7.0  \n","0       0    True   False   False   False     False      True     False  \n","1       1   False   False   False    True      True     False     False  \n","2       1   False   False   False    True     False     False      True  \n","3       0   False   False    True   False      True     False     False  \n","4       0   False    True   False   False      True     False     False  \n"]}]},{"cell_type":"code","source":["# Save to CSV\n","df.to_csv('cleaned_heart_disease.csv', index=False)\n","print(\"Dataset saved as 'cleaned_heart_disease.csv'\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LMfZEd3bMRaq","executionInfo":{"status":"ok","timestamp":1753580127382,"user_tz":-60,"elapsed":43,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"f2241dd3-6def-42c5-aa36-d7da3b2daa3b"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset saved as 'cleaned_heart_disease.csv'\n"]}]},{"cell_type":"markdown","source":["## Basic EDA (Optional)"],"metadata":{"id":"_9NtDpLyNBFH"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Basic statistics\n","print(\"\\nDataset statistics:\")\n","print(df.describe())\n","\n","# Target distribution\n","plt.figure(figsize=(6, 4))\n","sns.countplot(x='target', data=df)\n","plt.title('Distribution of Heart Disease (0 = No, 1 = Yes)')\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":775},"id":"o-x4l-WgNDMj","executionInfo":{"status":"ok","timestamp":1753580127619,"user_tz":-60,"elapsed":234,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"a05aed59-77de-422c-9864-506d8376db1f"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Dataset statistics:\n","              age    trestbps        chol     thalach     oldpeak          ca  \\\n","count  303.000000  303.000000  303.000000  303.000000  303.000000  303.000000   \n","mean    54.438944  131.689769  246.693069  149.607261    1.039604    0.663366   \n","std      9.038662   17.599748   51.776918   22.875003    1.161075    0.934375   \n","min     29.000000   94.000000  126.000000   71.000000    0.000000    0.000000   \n","25%     48.000000  120.000000  211.000000  133.500000    0.000000    0.000000   \n","50%     56.000000  130.000000  241.000000  153.000000    0.800000    0.000000   \n","75%     61.000000  140.000000  275.000000  166.000000    1.600000    1.000000   \n","max     77.000000  200.000000  564.000000  202.000000    6.200000    3.000000   \n","\n","           target  \n","count  303.000000  \n","mean     0.458746  \n","std      0.499120  \n","min      0.000000  \n","25%      0.000000  \n","50%      0.000000  \n","75%      1.000000  \n","max      1.000000  \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Class Balance (Critical)"],"metadata":{"id":"hsIppvcvZZQD"}},{"cell_type":"code","source":["print(df['target'].value_counts(normalize=True))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ZX1Uk35ZYiP","executionInfo":{"status":"ok","timestamp":1753580127626,"user_tz":-60,"elapsed":6,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"f568ea22-d867-4a7f-f566-b78666c1808b"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["target\n","0    0.541254\n","1    0.458746\n","Name: proportion, dtype: float64\n"]}]},{"cell_type":"code","source":["sns.boxplot(x='cp_2.0', y='oldpeak', data=df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"KQTew_HTaaOs","executionInfo":{"status":"ok","timestamp":1753580127826,"user_tz":-60,"elapsed":198,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"9edcc549-36e0-4acd-abf7-b69be1240fcd"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='cp_2.0', ylabel='oldpeak'>"]},"metadata":{},"execution_count":77},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# training\n","## sckilit learn part now"],"metadata":{"id":"f8IoHTcgOUe8"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = df.drop('target', axis=1)\n","y = df['target']\n","\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y,\n","    test_size=0.2,\n","    random_state=42,\n","    stratify=y  # Preserves class balance\n",")"],"metadata":{"id":"Dwf7E3g_OUOK","executionInfo":{"status":"ok","timestamp":1753580127830,"user_tz":-60,"elapsed":2,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["print(X_train[y_train == 1]['oldpeak'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j1d1ZU_lSCu-","executionInfo":{"status":"ok","timestamp":1753580127851,"user_tz":-60,"elapsed":18,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"2b2c38c1-9205-40f5-bb8a-8d770f9accef"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["1.4765765765765764\n"]}]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","clf = GaussianNB()\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"aZ9xOxyRSKXt","executionInfo":{"status":"ok","timestamp":1753580127890,"user_tz":-60,"elapsed":38,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"2692cb8e-dc06-436b-dbd1-ed022bafec63"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"],"text/html":["<style>#sk-container-id-5 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-5 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-5 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-5 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-5 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-5 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-5 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-5 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-5 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-5 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-5 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-5 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-5 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-5 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-5 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-5 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-5 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-5 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-5 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-5 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-5 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-5 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-5 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-5 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-5 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-5 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-5 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-5 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-5 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-5 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>GaussianNB</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.GaussianNB.html\">?<span>Documentation for GaussianNB</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianNB()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, roc_auc_score\n","\n","# Predictions\n","y_pred = clf.predict(X_test)\n","print(classification_report(y_test, y_pred))\n","\n","# Probabilities for ROC-AUC\n","y_prob = clf.predict_proba(X_test)[:, 1]\n","print(\"ROC-AUC:\", roc_auc_score(y_test, y_prob))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nghint2LSlpM","executionInfo":{"status":"ok","timestamp":1753580127920,"user_tz":-60,"elapsed":28,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"07eb317d-a354-462d-ff18-6e42eddf8ada"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.82      0.87        33\n","           1       0.81      0.93      0.87        28\n","\n","    accuracy                           0.87        61\n","   macro avg       0.87      0.87      0.87        61\n","weighted avg       0.88      0.87      0.87        61\n","\n","ROC-AUC: 0.9448051948051948\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import StratifiedKFold, cross_val_score\n","from sklearn.naive_bayes import MultinomialNB\n","\n","# Initialize classifier\n","clf = MultinomialNB(alpha=2.0, fit_prior=False)\n","\n","# Stratified 5-fold CV\n","cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n","scores = cross_val_score(clf, X, y, cv=cv, scoring='roc_auc')\n","\n","print(f\"Mean ROC-AUC: {scores.mean():.3f} (±{scores.std():.3f})\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SJqlDdlrYacl","executionInfo":{"status":"ok","timestamp":1753580128026,"user_tz":-60,"elapsed":108,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"fd155e7d-95c2-409c-be57-5e6780ce5230"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean ROC-AUC: 0.881 (±0.028)\n"]}]},{"cell_type":"markdown","source":["# EXERCICE 3 :Don’t forget to fine-tune the model you obtained from Exercise 2 using the techniques you learned in this chapter. What is the best AUC it achieves?"],"metadata":{"id":"3iGWqizmdAn6"}},{"cell_type":"markdown","source":["## For GaussianNB (Recommended for Your Data)"],"metadata":{"id":"XAegFzZMdF4j"}},{"cell_type":"markdown","source":[],"metadata":{"id":"GlRcfL4edFuf"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","from sklearn.model_selection import GridSearchCV\n","\n","param_grid = {\n","    'var_smoothing': [1e-9, 1e-8, 1e-7, 1e-6]  # Test different smoothing levels\n","}"],"metadata":{"id":"ps0i49BGYcSa","executionInfo":{"status":"ok","timestamp":1753580128026,"user_tz":-60,"elapsed":5,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["# Initialize a Gaussian Naive Bayes classifier\n","clf = GaussianNB()\n","\n","# Set up stratified 5-fold cross-validation\n","# This ensures that each fold maintains the same class distribution as the original dataset\n","cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n","\n","# Set up GridSearchCV to find the best hyperparameters\n","# 'estimator': the model to tune (our GaussianNB classifier)\n","# 'param_grid': the hyperparameters to test\n","# 'cv': the cross-validation strategy to use\n","# 'scoring': the metric to use for evaluating performance (ROC-AUC)\n","# 'n_jobs=-1': use all available CPU cores for faster processing\n","grid_search = GridSearchCV(\n","    estimator=clf,\n","    param_grid=param_grid,\n","    cv=cv,\n","    scoring='roc_auc',\n","    n_jobs=-1\n",")\n","\n","# Fit GridSearchCV to the training data to find the best hyperparameters\n","grid_search.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":166},"id":"LbF3ZvyNfigF","executionInfo":{"status":"ok","timestamp":1753580130787,"user_tz":-60,"elapsed":2764,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"54b3c25c-de49-46b1-bef0-99a68c2e6af0"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=StratifiedKFold(n_splits=5, random_state=42, shuffle=True),\n","             estimator=GaussianNB(), n_jobs=-1,\n","             param_grid={'var_smoothing': [1e-09, 1e-08, 1e-07, 1e-06]},\n","             scoring='roc_auc')"],"text/html":["<style>#sk-container-id-6 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-6 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-6 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-6 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-6 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-6 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-6 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-6 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-6 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-6 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-6 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-6 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-6 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-6 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-6 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-6 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-6 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-6 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-6 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-6 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-6 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-6 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-6 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-6 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-6 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-6 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-6 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-6 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-6 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-6 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=5, random_state=42, shuffle=True),\n","             estimator=GaussianNB(), n_jobs=-1,\n","             param_grid={&#x27;var_smoothing&#x27;: [1e-09, 1e-08, 1e-07, 1e-06]},\n","             scoring=&#x27;roc_auc&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>GridSearchCV</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=5, random_state=42, shuffle=True),\n","             estimator=GaussianNB(), n_jobs=-1,\n","             param_grid={&#x27;var_smoothing&#x27;: [1e-09, 1e-08, 1e-07, 1e-06]},\n","             scoring=&#x27;roc_auc&#x27;)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>best_estimator_: GaussianNB</div></div></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianNB(var_smoothing=1e-06)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>GaussianNB</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.GaussianNB.html\">?<span>Documentation for GaussianNB</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianNB(var_smoothing=1e-06)</pre></div> </div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["### Evaluate the Best Model"],"metadata":{"id":"QZkxITFSf3hB"}},{"cell_type":"code","source":["best_clf = grid_search.best_estimator_\n","print(\"Best hyperparameters:\", grid_search.best_params_)\n","\n","# Predict on test set\n","y_pred = best_clf.predict(X_test)\n","y_prob = best_clf.predict_proba(X_test)[:, 1]\n","\n","print(classification_report(y_test, y_pred))\n","print(\"ROC-AUC:\", roc_auc_score(y_test, y_prob))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yUgb-oUvf2JO","executionInfo":{"status":"ok","timestamp":1753580130808,"user_tz":-60,"elapsed":22,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"a30c66c8-7273-4e78-b5fb-ffaa8c98b23b"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["Best hyperparameters: {'var_smoothing': 1e-06}\n","              precision    recall  f1-score   support\n","\n","           0       0.93      0.85      0.89        33\n","           1       0.84      0.93      0.88        28\n","\n","    accuracy                           0.89        61\n","   macro avg       0.89      0.89      0.89        61\n","weighted avg       0.89      0.89      0.89        61\n","\n","ROC-AUC: 0.9458874458874459\n"]}]}]}