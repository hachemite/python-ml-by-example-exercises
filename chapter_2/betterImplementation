{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMp9AME6prWAaZAuGeKo+he"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"eab783f0"},"source":["# Movie Recommendation System with Naive Bayes Classifier\n","\n","## Introduction to Machine Learning for Recommendation Systems\n","\n","Machine learning is a powerful tool for building recommendation systems that can predict user preferences based on historical data. In this project, we'll implement a movie recommendation system using the Naive Bayes classifier, a probabilistic machine learning model based on Bayes' theorem.\n","\n","### Understanding the Problem\n","\n","We're working with the MovieLens 1M dataset, which contains:\n","- 1 million ratings from 6,000 users\n","- 4,000 movies\n","- Ratings on a scale of 1-5 stars\n","\n","Our goal is to predict whether a user will like a particular movie (in this case, movie ID 2858) based on their ratings of other movies.\n","\n","## Data Exploration and Preparation\n","\n","First, let's examine and prepare our data:"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from collections import defaultdict\n","\n","# @title\n","import zipfile\n","import requests\n","import io\n","\n","# 1. Download the dataset\n","url = \"https://files.grouplens.org/datasets/movielens/ml-1m.zip\"\n","print(\"Downloading dataset...\")\n","response = requests.get(url)\n","zip_file = zipfile.ZipFile(io.BytesIO(response.content))\n","\n","# 2. Extract files\n","print(\"Extracting files...\")\n","zip_file.extractall(\"ml-1m\")\n","\n","# 3. Load ratings data\n","print(\"Loading ratings data...\")\n","ratings_path = \"ml-1m/ml-1m/ratings.dat\"\n","print(\"file extracted\")\n","\n","# Load the data\n","data_path = \"ml-1m/ml-1m/ratings.dat\"\n","df = pd.read_csv(data_path, header=None, sep='::', engine='python')\n","df.columns = ['user_id', 'movie_id', 'rating', 'timestamp']\n","\n","# Basic dataset info\n","print(f\"Total ratings: {len(df)}\")\n","print(f\"Unique users: {df['user_id'].nunique()}\")\n","print(f\"Unique movies: {df['movie_id'].nunique()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ssXpd_5OXxqQ","executionInfo":{"status":"ok","timestamp":1753560999501,"user_tz":-60,"elapsed":8535,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"cebe43bd-5991-48e0-cee0-eb2b227eea6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading dataset...\n","Extracting files...\n","Loading ratings data...\n","file extracted\n","Total ratings: 1000209\n","Unique users: 6040\n","Unique movies: 3706\n"]}]},{"cell_type":"markdown","metadata":{"id":"32bb3e7c"},"source":["### Rating Distribution\n","\n","Let's visualize how ratings are distributed across the dataset:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"50d20bea","executionInfo":{"status":"ok","timestamp":1753561001889,"user_tz":-60,"elapsed":2379,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"2fc735b5-a716-47ce-f224-6c420fa32243"},"source":["plt.figure(figsize=(10, 6))\n","sns.countplot(x='rating', data=df, palette='viridis')\n","plt.title('Distribution of Movie Ratings')\n","plt.xlabel('Rating')\n","plt.ylabel('Count')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-18-2092393992.py:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(x='rating', data=df, palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"975006a4"},"source":["This shows us that rating 4 is the most common, followed by 3 and 5, with 1 being the least common.\n","\n","## Building the Recommendation Model\n","\n","### Data Preparation\n","\n","We'll transform our data into a user-movie matrix where:\n","- Rows represent users\n","- Columns represent movies\n","- Values represent ratings (0 if no rating exists)"]},{"cell_type":"code","metadata":{"id":"f6006513"},"source":["def load_rating_data(df, n_users, n_movies):\n","    data = np.zeros([n_users, n_movies], dtype=np.float32)\n","    movie_id_mapping = {}\n","    for index, row in df.iterrows():\n","        user_id = int(row['user_id']) - 1  # Convert to 0-based index\n","        movie_id = str(row['movie_id'])\n","        if movie_id not in movie_id_mapping:\n","            movie_id_mapping[movie_id] = len(movie_id_mapping)\n","        rating = int(row['rating'])\n","        data[user_id, movie_id_mapping[movie_id]] = rating\n","    return data, movie_id_mapping\n","\n","n_users = df['user_id'].nunique()\n","n_movies = df['movie_id'].nunique()\n","data, movie_id_mapping = load_rating_data(df, n_users, n_movies)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dab36c1b"},"source":["### Target Movie Selection\n","\n","We'll focus on predicting ratings for movie ID 2858:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"68d6bd73","executionInfo":{"status":"ok","timestamp":1753561039563,"user_tz":-60,"elapsed":93,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"4afa6be1-4cbc-4396-f0ad-ac824fa82b88"},"source":["target_movie_id = '2858'\n","X_raw = np.delete(data, movie_id_mapping[target_movie_id], axis=1)\n","Y_raw = data[:, movie_id_mapping[target_movie_id]]\n","\n","# Only keep users who rated the target movie\n","X = X_raw[Y_raw > 0]\n","Y = Y_raw[Y_raw > 0]\n","\n","# Convert to binary classification (like/dislike)\n","Y[Y <= 3] = 0  # Dislike\n","Y[Y > 3] = 1   # Like\n","\n","print(f\"Positive samples (like): {(Y == 1).sum()}\")\n","print(f\"Negative samples (dislike): {(Y == 0).sum()}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Positive samples (like): 2853\n","Negative samples (dislike): 575\n"]}]},{"cell_type":"markdown","metadata":{"id":"774b710c"},"source":["## Model Training and Evaluation\n","\n","### Splitting the Data\n","\n","We'll use 80% for training and 20% for testing:"]},{"cell_type":"code","metadata":{"id":"760a4d5f"},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(\n","    X, Y, test_size=0.2, random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e8fefc98"},"source":["### Naive Bayes Classifier\n","\n","The Naive Bayes classifier is particularly suitable for this type of data because:\n","1. It handles discrete features well (our ratings are discrete values 1-5)\n","2. It's computationally efficient\n","3. It works well even with limited training data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"29f43a04","executionInfo":{"status":"ok","timestamp":1753561039804,"user_tz":-60,"elapsed":166,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"b0e983a4-67cc-4eeb-a440-fefea697e45b"},"source":["from sklearn.naive_bayes import MultinomialNB\n","\n","clf = MultinomialNB(alpha=1.0, fit_prior=True)\n","clf.fit(X_train, Y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>MultinomialNB</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.MultinomialNB.html\">?<span>Documentation for MultinomialNB</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>MultinomialNB()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"bc349c69"},"source":["### Model Evaluation\n","\n","Let's evaluate our model's performance:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f68d9837","executionInfo":{"status":"ok","timestamp":1753561039818,"user_tz":-60,"elapsed":23,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"92af8287-4c9b-443e-e14f-8b98161b1864"},"source":["from sklearn.metrics import (accuracy_score, confusion_matrix,\n","                               precision_score, recall_score,\n","                               f1_score, roc_auc_score)\n","\n","# Predictions\n","Y_pred = clf.predict(X_test)\n","Y_prob = clf.predict_proba(X_test)[:, 1]\n","\n","# Metrics\n","print(f\"Accuracy: {accuracy_score(Y_test, Y_pred):.2f}\")\n","print(f\"Precision: {precision_score(Y_test, Y_pred):.2f}\")\n","print(f\"Recall: {recall_score(Y_test, Y_pred):.2f}\")\n","print(f\"F1 Score: {f1_score(Y_test, Y_pred):.2f}\")\n","print(f\"ROC AUC: {roc_auc_score(Y_test, Y_prob):.2f}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.72\n","Precision: 0.90\n","Recall: 0.74\n","F1 Score: 0.82\n","ROC AUC: 0.69\n"]}]},{"cell_type":"markdown","metadata":{"id":"e6cafada"},"source":["### Confusion Matrix Visualization"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"1e5f3770","executionInfo":{"status":"ok","timestamp":1753561040011,"user_tz":-60,"elapsed":195,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"90df879e-e676-4c9d-dff4-0868549d37ac"},"source":["cm = confusion_matrix(Y_test, Y_pred)\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n","            xticklabels=['Dislike', 'Like'],\n","            yticklabels=['Dislike', 'Like'])\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted')\n","plt.ylabel('Actual')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"2fa7e029"},"source":["### ROC Curve"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"7a52ad5d","executionInfo":{"status":"ok","timestamp":1753561040203,"user_tz":-60,"elapsed":191,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"75af92fb-d191-48b2-dec4-8bdca7ef0ed1"},"source":["from sklearn.metrics import roc_curve\n","\n","fpr, tpr, thresholds = roc_curve(Y_test, Y_prob)\n","plt.figure(figsize=(8, 6))\n","plt.plot(fpr, tpr, label=f'ROC Curve (AUC = {roc_auc_score(Y_test, Y_prob):.2f})')\n","plt.plot([0, 1], [0, 1], 'k--')\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic')\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"647b0ed0"},"source":["## Model Interpretation\n","\n","### Feature Importance\n","\n","While Naive Bayes doesn't provide direct feature importance like some other models, we can examine the log probabilities to understand which movies are most predictive:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4d522d5","executionInfo":{"status":"ok","timestamp":1753561040213,"user_tz":-60,"elapsed":8,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"f93f7bbc-a42f-44df-dd12-5ce09bc9190f"},"source":["# Get the log probabilities for class 1 (like)\n","log_probs = clf.feature_log_prob_[1]\n","\n","# Get the top 10 most predictive movies for \"like\"\n","top_movie_indices = np.argsort(log_probs)[-10:][::-1]\n","\n","# Map back to movie IDs (this would require the inverse movie_id_mapping)\n","# For demonstration, we'll just show the indices\n","print(\"Top 10 movies most predictive of liking our target movie:\")\n","print(top_movie_indices)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Top 10 movies most predictive of liking our target movie:\n","[183  51 127  38 123  44  48 166 243 133]\n"]}]},{"cell_type":"markdown","metadata":{"id":"904994c2"},"source":["## Conclusion\n","\n","This recommendation system demonstrates how machine learning can predict user preferences. The Naive Bayes classifier achieved reasonable performance, though there's room for improvement:\n","\n","1. **Model Improvements**: Try other algorithms like collaborative filtering or matrix factorization\n","2. **Feature Engineering**: Incorporate movie genres, user demographics\n","3. **Hyperparameter Tuning**: Further optimize the smoothing parameter\n","\n","Recommendation systems are powerful tools for personalization in many applications beyond movies, including e-commerce, content platforms, and more."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c552d51e","executionInfo":{"status":"ok","timestamp":1753561040256,"user_tz":-60,"elapsed":40,"user":{"displayName":"hachem squalli","userId":"05759333707596247759"}},"outputId":"c11c4df7-308d-4b7f-f795-b340097950c7"},"source":["# Final thoughts\n","print(\"Recommendation systems are complex but valuable!\")\n","print(\"This implementation provides a solid foundation for understanding how they work.\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Recommendation systems are complex but valuable!\n","This implementation provides a solid foundation for understanding how they work.\n"]}]},{"cell_type":"markdown","source":["Here's a concise summary of the chapter \"Building a Movie Recommendation Engine with Naïve Bayes\" without code:\n","\n","### **Chapter Summary: Movie Recommendation with Naïve Bayes**\n","\n","#### **1. Introduction to Classification**\n","- **Classification** is a supervised learning task where the goal is to predict categorical labels (classes) based on input features.\n","- **Types of Classification:**\n","  - **Binary Classification:** Two possible classes (e.g., spam/not spam, like/dislike).\n","  - **Multiclass Classification:** More than two classes (e.g., handwritten digit recognition).\n","  - **Multi-label Classification:** A single instance can belong to multiple classes (e.g., movie genres).\n","\n","#### **2. Naïve Bayes Classifier**\n","- A probabilistic classifier based on **Bayes’ Theorem**, which calculates the probability of a class given observed features.\n","- **\"Naïve\" Assumption:** Features are conditionally independent given the class label, simplifying probability calculations.\n","- **Types of Naïve Bayes:**\n","  - **BernoulliNB:** For binary features.\n","  - **MultinomialNB:** For discrete counts (e.g., word frequencies, ratings).\n","  - **GaussianNB:** For continuous data with Gaussian distribution.\n","\n","#### **3. Bayes’ Theorem**\n","- Formula:  \n","  \\[\n","  P(y_k | x) = \\frac{P(x | y_k) P(y_k)}{P(x)}\n","  \\]\n","  - \\(P(y_k)\\): **Prior** probability of class \\(y_k\\).\n","  - \\(P(x | y_k)\\): **Likelihood** of observing features \\(x\\) given class \\(y_k\\).\n","  - \\(P(y_k | x)\\): **Posterior** probability of class \\(y_k\\) given features \\(x\\).\n","- **Laplace Smoothing:** Adds a small constant to avoid zero probabilities for unseen features.\n","\n","#### **4. Movie Recommendation System**\n","- **Dataset:** MovieLens 1M dataset (1 million ratings from 6,040 users on 3,706 movies).\n","- **Problem Framing:** Predict whether a user will like a target movie (binary classification) based on their other ratings.\n","- **Steps:**\n","  1. **Data Preparation:** Construct a user-movie rating matrix.\n","  2. **Feature Selection:** Use ratings of other movies as features.\n","  3. **Target Variable:** Binary label (like/dislike) based on a threshold (e.g., ratings > 3).\n","  4. **Train-Test Split:** 80% training, 20% testing.\n","  5. **Model Training:** Fit a `MultinomialNB` classifier.\n","  6. **Evaluation:** Accuracy, precision, recall, F1-score, and ROC-AUC.\n","\n","#### **5. Evaluation Metrics**\n","- **Confusion Matrix:** Tracks true positives (TP), false positives (FP), true negatives (TN), false negatives (FN).\n","- **Precision:** \\(\\frac{TP}{TP + FP}\\) (how many predicted positives are correct).\n","- **Recall (Sensitivity):** \\(\\frac{TP}{TP + FN}\\) (how many actual positives are correctly predicted).\n","- **F1-Score:** Harmonic mean of precision and recall.\n","- **ROC-AUC:** Measures the classifier’s ability to distinguish between classes (AUC = 0.5: random, AUC = 1: perfect).\n","\n","#### **6. Model Tuning with Cross-Validation**\n","- **k-Fold Cross-Validation:** Splits data into \\(k\\) folds, trains on \\(k-1\\) folds, and validates on the remaining fold. Repeats \\(k\\) times.\n","- **Purpose:** Reduces overfitting and provides a robust estimate of model performance.\n","- **Hyperparameter Tuning:** Test different values for `alpha` (smoothing) and `fit_prior` (learn class priors) to maximize AUC.\n","\n","#### **7. Results**\n","- The tuned Naïve Bayes model achieved an **AUC of 0.686**, indicating acceptable performance given the sparse rating data.\n","- **Limitations:** Naïve Bayes assumes feature independence, which may not hold for movie preferences (e.g., genres influence ratings).\n","\n","#### **8. Key Takeaways**\n","- Naïve Bayes is simple, fast, and works well for high-dimensional data (e.g., text, ratings).\n","- Classification metrics (precision, recall, F1, AUC) provide a comprehensive view of model performance.\n","- Cross-validation helps in hyperparameter tuning and avoiding overfitting.\n","\n","### **Next Steps**\n","The next chapter explores **decision trees** for binary classification, focusing on ad click-through prediction. Decision trees offer interpretability and can capture non-linear relationships, complementing probabilistic models like Naïve Bayes."],"metadata":{"id":"4Z1jUQ-NacEe"}}]}